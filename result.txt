Issue: The size of IOs is too large to achieve the desired goal
Details: The cluster wide throughput and IOs per second are reported from which the average IO size is derived. The IO size must be small (ideally 4K) for the goals of maximum IOPs and minimum latency. The remedy is to reduce the IO size. Consult Ask VMware for a recommendation on possible solutions.
URL: http://kb.vmware.com/kb/2150019
Result: (vim.cluster.VsanPerfDiagnosticResult) {
   dynamicType = <unset>,
   dynamicProperty = (vmodl.DynamicProperty) [],
   exceptionId = 'com.vmware.vsan.perf.diag.exception.vsanperftoolargeiosizeexception',
   recommendation = '',
   aggregationFunction = 'Metric Aggregation: /,Cluster Aggregation: None',
   aggregationData = (vim.cluster.VsanPerfEntityMetricCSV) {
      dynamicType = <unset>,
      dynamicProperty = (vmodl.DynamicProperty) [],
      entityRefId = 'cluster-domclient:523f7eb4-6f24-77e8-5f6b-ce5cf8fabc4c',
      sampleInfo = '2019-08-09 22:30:00,2019-08-09 22:35:00,2019-08-09 22:40:00,2019-08-09 22:45:00,2019-08-09 22:50:00,2019-08-09 22:55:00,2019-08-09 23:00:00,2019-08-09 23:05:00,2019-08-09 23:10:00,2019-08-09 23:15:00,2019-08-09 23:20:00,2019-08-09 23:25:00,2019-08-09 23:30:00',
      value = (vim.cluster.VsanPerfMetricSeriesCSV) [
         (vim.cluster.VsanPerfMetricSeriesCSV) {
            dynamicType = <unset>,
            dynamicProperty = (vmodl.DynamicProperty) [],
            metricId = (vim.cluster.VsanPerfMetricId) {
               dynamicType = <unset>,
               dynamicProperty = (vmodl.DynamicProperty) [],
               label = 'throughputRead/iopsRead',
               group = <unset>,
               rollupType = <unset>,
               statsType = <unset>,
               name = <unset>,
               description = <unset>,
               metricsCollectInterval = <unset>
            },
            threshold = (vim.cluster.VsanPerfThreshold) {
               dynamicType = <unset>,
               dynamicProperty = (vmodl.DynamicProperty) [],
               direction = 'upper',
               yellow = '8192',
               red = <unset>
            },
            numExceptions = <unset>,
            values = '261999.621551,261981.528612,261880.028498,261862.357611,261885.822877,261992.107535,261954.778793,261991.214781,261960.456036,261936.189234,261616.059479,261854.591198,261920.790161'
         }
      ]
   },
   exceptionData = (vim.cluster.VsanPerfEntityMetricCSV) [
      (vim.cluster.VsanPerfEntityMetricCSV) {
         dynamicType = <unset>,
         dynamicProperty = (vmodl.DynamicProperty) [],
         entityRefId = 'cluster-domclient:523f7eb4-6f24-77e8-5f6b-ce5cf8fabc4c',
         sampleInfo = '2019-08-09 22:30:00,2019-08-09 22:35:00,2019-08-09 22:40:00,2019-08-09 22:45:00,2019-08-09 22:50:00,2019-08-09 22:55:00,2019-08-09 23:00:00,2019-08-09 23:05:00,2019-08-09 23:10:00,2019-08-09 23:15:00,2019-08-09 23:20:00,2019-08-09 23:25:00,2019-08-09 23:30:00',
         value = (vim.cluster.VsanPerfMetricSeriesCSV) [
            (vim.cluster.VsanPerfMetricSeriesCSV) {
               dynamicType = <unset>,
               dynamicProperty = (vmodl.DynamicProperty) [],
               metricId = (vim.cluster.VsanPerfMetricId) {
                  dynamicType = <unset>,
                  dynamicProperty = (vmodl.DynamicProperty) [],
                  label = 'throughputRead',
                  group = <unset>,
                  rollupType = <unset>,
                  statsType = <unset>,
                  name = <unset>,
                  description = <unset>,
                  metricsCollectInterval = <unset>
               },
               threshold = <unset>,
               numExceptions = <unset>,
               values = '1101446409.0,1117089238.0,1121108402.0,1118152267.0,1110395889.0,1098794899.0,1089469925.0,1095385269.0,1102329599.0,1104584910.0,1104019771.0,1112620158.0,1123378269.0'
            }
         ]
      },
      (vim.cluster.VsanPerfEntityMetricCSV) {
         dynamicType = <unset>,
         dynamicProperty = (vmodl.DynamicProperty) [],
         entityRefId = 'cluster-domclient:523f7eb4-6f24-77e8-5f6b-ce5cf8fabc4c',
         sampleInfo = '2019-08-09 22:30:00,2019-08-09 22:35:00,2019-08-09 22:40:00,2019-08-09 22:45:00,2019-08-09 22:50:00,2019-08-09 22:55:00,2019-08-09 23:00:00,2019-08-09 23:05:00,2019-08-09 23:10:00,2019-08-09 23:15:00,2019-08-09 23:20:00,2019-08-09 23:25:00,2019-08-09 23:30:00',
         value = (vim.cluster.VsanPerfMetricSeriesCSV) [
            (vim.cluster.VsanPerfMetricSeriesCSV) {
               dynamicType = <unset>,
               dynamicProperty = (vmodl.DynamicProperty) [],
               metricId = (vim.cluster.VsanPerfMetricId) {
                  dynamicType = <unset>,
                  dynamicProperty = (vmodl.DynamicProperty) [],
                  label = 'iopsRead',
                  group = <unset>,
                  rollupType = <unset>,
                  statsType = <unset>,
                  name = <unset>,
                  description = <unset>,
                  metricsCollectInterval = <unset>
               },
               threshold = <unset>,
               numExceptions = <unset>,
               values = '4204.0,4264.0,4281.0,4270.0,4240.0,4194.0,4159.0,4181.0,4208.0,4217.0,4220.0,4249.0,4289.0'
            }
         ]
      }
   ]
}
Issue: The size of IOs is too large to achieve the desired goal
Details: The cluster wide throughput and IOs per second are reported from which the average IO size is derived. The IO size must be small (ideally 4K) for the goals of maximum IOPs and minimum latency. The remedy is to reduce the IO size. Consult Ask VMware for a recommendation on possible solutions.
URL: http://kb.vmware.com/kb/2150019
Result: (vim.cluster.VsanPerfDiagnosticResult) {
   dynamicType = <unset>,
   dynamicProperty = (vmodl.DynamicProperty) [],
   exceptionId = 'com.vmware.vsan.perf.diag.exception.vsanperftoolargeiosizeexception',
   recommendation = '',
   aggregationFunction = 'Metric Aggregation: /,Cluster Aggregation: None',
   aggregationData = (vim.cluster.VsanPerfEntityMetricCSV) {
      dynamicType = <unset>,
      dynamicProperty = (vmodl.DynamicProperty) [],
      entityRefId = 'cluster-domclient:523f7eb4-6f24-77e8-5f6b-ce5cf8fabc4c',
      sampleInfo = '2019-08-09 22:30:00,2019-08-09 22:35:00,2019-08-09 22:40:00,2019-08-09 22:45:00,2019-08-09 22:50:00,2019-08-09 22:55:00,2019-08-09 23:00:00,2019-08-09 23:05:00,2019-08-09 23:10:00,2019-08-09 23:15:00,2019-08-09 23:20:00,2019-08-09 23:25:00,2019-08-09 23:30:00',
      value = (vim.cluster.VsanPerfMetricSeriesCSV) [
         (vim.cluster.VsanPerfMetricSeriesCSV) {
            dynamicType = <unset>,
            dynamicProperty = (vmodl.DynamicProperty) [],
            metricId = (vim.cluster.VsanPerfMetricId) {
               dynamicType = <unset>,
               dynamicProperty = (vmodl.DynamicProperty) [],
               label = 'throughputWrite/iopsWrite',
               group = <unset>,
               rollupType = <unset>,
               statsType = <unset>,
               name = <unset>,
               description = <unset>,
               metricsCollectInterval = <unset>
            },
            threshold = (vim.cluster.VsanPerfThreshold) {
               dynamicType = <unset>,
               dynamicProperty = (vmodl.DynamicProperty) [],
               direction = 'upper',
               yellow = '8192',
               red = <unset>
            },
            numExceptions = <unset>,
            values = '261552.614958,261511.214091,261417.790217,261486.586696,261595.060989,261487.761931,261438.330907,261420.559889,261617.589928,261486.120309,261321.759382,261490.116292,261501.974484'
         }
      ]
   },
   exceptionData = (vim.cluster.VsanPerfEntityMetricCSV) [
      (vim.cluster.VsanPerfEntityMetricCSV) {
         dynamicType = <unset>,
         dynamicProperty = (vmodl.DynamicProperty) [],
         entityRefId = 'cluster-domclient:523f7eb4-6f24-77e8-5f6b-ce5cf8fabc4c',
         sampleInfo = '2019-08-09 22:30:00,2019-08-09 22:35:00,2019-08-09 22:40:00,2019-08-09 22:45:00,2019-08-09 22:50:00,2019-08-09 22:55:00,2019-08-09 23:00:00,2019-08-09 23:05:00,2019-08-09 23:10:00,2019-08-09 23:15:00,2019-08-09 23:20:00,2019-08-09 23:25:00,2019-08-09 23:30:00',
         value = (vim.cluster.VsanPerfMetricSeriesCSV) [
            (vim.cluster.VsanPerfMetricSeriesCSV) {
               dynamicType = <unset>,
               dynamicProperty = (vmodl.DynamicProperty) [],
               metricId = (vim.cluster.VsanPerfMetricId) {
                  dynamicType = <unset>,
                  dynamicProperty = (vmodl.DynamicProperty) [],
                  label = 'throughputWrite',
                  group = <unset>,
                  rollupType = <unset>,
                  statsType = <unset>,
                  name = <unset>,
                  description = <unset>,
                  metricsCollectInterval = <unset>
               },
               threshold = <unset>,
               numExceptions = <unset>,
               values = '472102470.0,478827033.0,481008734.0,479566400.0,476103011.0,471200947.0,466928859.0,469249905.0,472742985.0,473812850.0,473515028.0,476696482.0,481686637.0'
            }
         ]
      },
      (vim.cluster.VsanPerfEntityMetricCSV) {
         dynamicType = <unset>,
         dynamicProperty = (vmodl.DynamicProperty) [],
         entityRefId = 'cluster-domclient:523f7eb4-6f24-77e8-5f6b-ce5cf8fabc4c',
         sampleInfo = '2019-08-09 22:30:00,2019-08-09 22:35:00,2019-08-09 22:40:00,2019-08-09 22:45:00,2019-08-09 22:50:00,2019-08-09 22:55:00,2019-08-09 23:00:00,2019-08-09 23:05:00,2019-08-09 23:10:00,2019-08-09 23:15:00,2019-08-09 23:20:00,2019-08-09 23:25:00,2019-08-09 23:30:00',
         value = (vim.cluster.VsanPerfMetricSeriesCSV) [
            (vim.cluster.VsanPerfMetricSeriesCSV) {
               dynamicType = <unset>,
               dynamicProperty = (vmodl.DynamicProperty) [],
               metricId = (vim.cluster.VsanPerfMetricId) {
                  dynamicType = <unset>,
                  dynamicProperty = (vmodl.DynamicProperty) [],
                  label = 'iopsWrite',
                  group = <unset>,
                  rollupType = <unset>,
                  statsType = <unset>,
                  name = <unset>,
                  description = <unset>,
                  metricsCollectInterval = <unset>
               },
               threshold = <unset>,
               numExceptions = <unset>,
               values = '1805.0,1831.0,1840.0,1834.0,1820.0,1802.0,1786.0,1795.0,1807.0,1812.0,1812.0,1823.0,1842.0'
            }
         ]
      }
   ]
}
Issue: There are losses seen in the TCP layer at one or more hosts
Details: vSAN encounters higher transaction latency when out of order packets and retransmissions are seen in the TCP stack. Consult Ask VMware for a recommendation on possible solutions.
URL: http://kb.vmware.com/kb/2150182
Result: (vim.cluster.VsanPerfDiagnosticResult) {
   dynamicType = <unset>,
   dynamicProperty = (vmodl.DynamicProperty) [],
   exceptionId = 'com.vmware.vsan.perf.diag.exception.vsanperfhosttcplayererror',
   recommendation = '',
   aggregationFunction = '',
   aggregationData = <unset>,
   exceptionData = (vim.cluster.VsanPerfEntityMetricCSV) [
      (vim.cluster.VsanPerfEntityMetricCSV) {
         dynamicType = <unset>,
         dynamicProperty = (vmodl.DynamicProperty) [],
         entityRefId = 'host-domcompmgr:5d4bce4a-f359-84cb-5201-e4434b3dda08',
         sampleInfo = '2019-08-09 22:30:00,2019-08-09 22:35:00,2019-08-09 22:40:00,2019-08-09 22:45:00,2019-08-09 22:50:00,2019-08-09 22:55:00,2019-08-09 23:00:00,2019-08-09 23:05:00,2019-08-09 23:10:00,2019-08-09 23:15:00,2019-08-09 23:20:00,2019-08-09 23:25:00,2019-08-09 23:30:00',
         value = (vim.cluster.VsanPerfMetricSeriesCSV) [
            (vim.cluster.VsanPerfMetricSeriesCSV) {
               dynamicType = <unset>,
               dynamicProperty = (vmodl.DynamicProperty) [],
               metricId = (vim.cluster.VsanPerfMetricId) {
                  dynamicType = <unset>,
                  dynamicProperty = (vmodl.DynamicProperty) [],
                  label = 'tcpRxErrRate',
                  group = <unset>,
                  rollupType = <unset>,
                  statsType = <unset>,
                  name = <unset>,
                  description = <unset>,
                  metricsCollectInterval = <unset>
               },
               threshold = (vim.cluster.VsanPerfThreshold) {
                  dynamicType = <unset>,
                  dynamicProperty = (vmodl.DynamicProperty) [],
                  direction = 'upper',
                  yellow = '50',
                  red = <unset>
               },
               numExceptions = <unset>,
               values = '619.0,618.0,616.0,618.0,621.0,621.0,623.0,618.0,618.0,612.0,614.0,622.0,621.0'
            }
         ]
      }
   ]
}
